/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package naughtsandcrossesgui;

import java.awt.Toolkit;
import java.util.Random;



/**
 *
 * @author aocar
 */
public class Game extends javax.swing.JFrame {
    static String[][] table;
    static Random rand = new Random();
    static int x;
    static int y;
    static int count = 0;
    public Game() {
        initComponents();
        table = new String[3][3];
        table();
        topLeftCross.setVisible(false);
        topMiddleCross.setVisible(false);
        topRightCross.setVisible(false);
        middleLeftCross.setVisible(false);
        middleCross.setVisible(false);
        middleRightCross.setVisible(false);
        bottomLeftCross.setVisible(false);
        bottomMiddleCross.setVisible(false);
        bottomRightCross.setVisible(false);
        
        topLeftNaught.setVisible(false);
        middleLeftNaught.setVisible(false);                
        bottomLeftNaught.setVisible(false);                
        topMiddleNaught.setVisible(false);                
        middleNaught.setVisible(false);               
        bottomMiddleNaught.setVisible(false);                
        topRightNaught.setVisible(false);               
        middleRightNaught.setVisible(false);                
        bottomRightNaught.setVisible(false);
        repeat.setVisible(false);        
    
        playAgainText.setVisible(false);
        yesButton.setVisible(false);
        noButton.setVisible(false);
        lostText.setVisible(false);
        wonText.setVisible(false);
        drewText.setVisible(false);
    }
    public void repeat(){
        repeat.setVisible(true); 
    }
    public void playAgain(){
        playAgainText.setVisible(true);
        yesButton.setVisible(true);
        noButton.setVisible(true);
    }
    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        middleLeftNaught = new javax.swing.JLabel();
        middleLeftCross = new javax.swing.JLabel();
        bottomLeftCross = new javax.swing.JLabel();
        middleLeftBox = new javax.swing.JLabel();
        topLeftNaught = new javax.swing.JLabel();
        bottomRightCross = new javax.swing.JLabel();
        bottomMiddleCross = new javax.swing.JLabel();
        topLeftCross = new javax.swing.JLabel();
        topLeftBox = new javax.swing.JLabel();
        bottomLeftNaught = new javax.swing.JLabel();
        bottomLeftBox = new javax.swing.JLabel();
        topRightNaught = new javax.swing.JLabel();
        topRightCross = new javax.swing.JLabel();
        topRightBox = new javax.swing.JLabel();
        middleNaught = new javax.swing.JLabel();
        middleCross = new javax.swing.JLabel();
        middleBox = new javax.swing.JLabel();
        middleRightCross = new javax.swing.JLabel();
        middleRightNaught = new javax.swing.JLabel();
        middleRightBox = new javax.swing.JLabel();
        bottomMiddleNaught = new javax.swing.JLabel();
        bottomMiddleBox = new javax.swing.JLabel();
        bottomRightNaught = new javax.swing.JLabel();
        BottomRightBox = new javax.swing.JLabel();
        topMiddleCross = new javax.swing.JLabel();
        topMiddleNaught = new javax.swing.JLabel();
        topMiddleBox = new javax.swing.JLabel();
        repeat = new javax.swing.JLabel();
        playAgainText = new javax.swing.JLabel();
        yesButton = new javax.swing.JButton();
        noButton = new javax.swing.JButton();
        wonText = new javax.swing.JLabel();
        lostText = new javax.swing.JLabel();
        drewText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        middleLeftNaught.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/cross (4).png"))); // NOI18N
        getContentPane().add(middleLeftNaught);
        middleLeftNaught.setBounds(50, 360, 260, 260);

        middleLeftCross.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/naught (4).png"))); // NOI18N
        getContentPane().add(middleLeftCross);
        middleLeftCross.setBounds(50, 360, 250, 260);

        bottomLeftCross.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/naught (4).png"))); // NOI18N
        getContentPane().add(bottomLeftCross);
        bottomLeftCross.setBounds(60, 670, 250, 260);

        middleLeftBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/square (3).jpg"))); // NOI18N
        middleLeftBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                middleLeftBoxMouseClicked(evt);
            }
        });
        getContentPane().add(middleLeftBox);
        middleLeftBox.setBounds(30, 340, 300, 299);

        topLeftNaught.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/cross (4).png"))); // NOI18N
        getContentPane().add(topLeftNaught);
        topLeftNaught.setBounds(50, 30, 270, 300);

        bottomRightCross.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/naught (4).png"))); // NOI18N
        getContentPane().add(bottomRightCross);
        bottomRightCross.setBounds(670, 670, 250, 260);

        bottomMiddleCross.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/naught (4).png"))); // NOI18N
        getContentPane().add(bottomMiddleCross);
        bottomMiddleCross.setBounds(360, 670, 250, 260);

        topLeftCross.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/naught (4).png"))); // NOI18N
        getContentPane().add(topLeftCross);
        topLeftCross.setBounds(50, 50, 260, 260);

        topLeftBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/square (3).jpg"))); // NOI18N
        topLeftBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                topLeftBoxMouseClicked(evt);
            }
        });
        getContentPane().add(topLeftBox);
        topLeftBox.setBounds(30, 30, 300, 299);

        bottomLeftNaught.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/cross (4).png"))); // NOI18N
        getContentPane().add(bottomLeftNaught);
        bottomLeftNaught.setBounds(50, 680, 250, 260);

        bottomLeftBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/square (3).jpg"))); // NOI18N
        bottomLeftBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bottomLeftBoxMouseClicked(evt);
            }
        });
        getContentPane().add(bottomLeftBox);
        bottomLeftBox.setBounds(30, 650, 300, 299);

        topRightNaught.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/cross (4).png"))); // NOI18N
        getContentPane().add(topRightNaught);
        topRightNaught.setBounds(670, 50, 240, 260);

        topRightCross.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/naught (4).png"))); // NOI18N
        getContentPane().add(topRightCross);
        topRightCross.setBounds(680, 50, 250, 260);

        topRightBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/square (3).jpg"))); // NOI18N
        topRightBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                topRightBoxMouseClicked(evt);
            }
        });
        getContentPane().add(topRightBox);
        topRightBox.setBounds(650, 30, 300, 299);

        middleNaught.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/cross (4).png"))); // NOI18N
        getContentPane().add(middleNaught);
        middleNaught.setBounds(360, 350, 260, 280);

        middleCross.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/naught (4).png"))); // NOI18N
        getContentPane().add(middleCross);
        middleCross.setBounds(360, 370, 250, 260);

        middleBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/square (3).jpg"))); // NOI18N
        middleBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                middleBoxMouseClicked(evt);
            }
        });
        getContentPane().add(middleBox);
        middleBox.setBounds(340, 340, 300, 299);

        middleRightCross.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/naught (4).png"))); // NOI18N
        getContentPane().add(middleRightCross);
        middleRightCross.setBounds(680, 370, 250, 260);

        middleRightNaught.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/cross (4).png"))); // NOI18N
        getContentPane().add(middleRightNaught);
        middleRightNaught.setBounds(670, 360, 250, 270);

        middleRightBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/square (3).jpg"))); // NOI18N
        middleRightBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                middleRightBoxMouseClicked(evt);
            }
        });
        getContentPane().add(middleRightBox);
        middleRightBox.setBounds(650, 340, 300, 299);

        bottomMiddleNaught.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/cross (4).png"))); // NOI18N
        getContentPane().add(bottomMiddleNaught);
        bottomMiddleNaught.setBounds(370, 660, 310, 300);

        bottomMiddleBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/square (3).jpg"))); // NOI18N
        bottomMiddleBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bottomMiddleBoxMouseClicked(evt);
            }
        });
        getContentPane().add(bottomMiddleBox);
        bottomMiddleBox.setBounds(340, 650, 300, 299);

        bottomRightNaught.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/cross (4).png"))); // NOI18N
        getContentPane().add(bottomRightNaught);
        bottomRightNaught.setBounds(670, 650, 310, 300);

        BottomRightBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/square (3).jpg"))); // NOI18N
        BottomRightBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BottomRightBoxMouseClicked(evt);
            }
        });
        getContentPane().add(BottomRightBox);
        BottomRightBox.setBounds(650, 650, 300, 299);

        topMiddleCross.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/naught (4).png"))); // NOI18N
        getContentPane().add(topMiddleCross);
        topMiddleCross.setBounds(370, 50, 250, 260);

        topMiddleNaught.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/cross (4).png"))); // NOI18N
        getContentPane().add(topMiddleNaught);
        topMiddleNaught.setBounds(370, 40, 250, 280);

        topMiddleBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/naughtsandcrossesgui/square (3).jpg"))); // NOI18N
        topMiddleBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                topMiddleBoxMouseClicked(evt);
            }
        });
        getContentPane().add(topMiddleBox);
        topMiddleBox.setBounds(340, 30, 300, 299);

        repeat.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        repeat.setText("That square has already been played");
        getContentPane().add(repeat);
        repeat.setBounds(990, 50, 450, 70);

        playAgainText.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        playAgainText.setText("Would you like to play again?");
        getContentPane().add(playAgainText);
        playAgainText.setBounds(1000, 180, 380, 120);

        yesButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        yesButton.setText("yes");
        yesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesButtonActionPerformed(evt);
            }
        });
        getContentPane().add(yesButton);
        yesButton.setBounds(1000, 290, 150, 50);

        noButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        noButton.setText("no");
        noButton.setMaximumSize(new java.awt.Dimension(49, 23));
        noButton.setMinimumSize(new java.awt.Dimension(49, 23));
        noButton.setPreferredSize(new java.awt.Dimension(49, 23));
        noButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noButtonActionPerformed(evt);
            }
        });
        getContentPane().add(noButton);
        noButton.setBounds(1170, 290, 150, 50);

        wonText.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        wonText.setText("You Won!");
        getContentPane().add(wonText);
        wonText.setBounds(1100, 140, 140, 50);

        lostText.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lostText.setText("You Lost!");
        getContentPane().add(lostText);
        lostText.setBounds(1100, 140, 110, 50);

        drewText.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        drewText.setText("You Drew!");
        getContentPane().add(drewText);
        drewText.setBounds(1100, 140, 120, 60);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void topLeftBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topLeftBoxMouseClicked
        repeat.setVisible(false); 
        if(count<4){
            if(table[0][0].equals("[ ]")&&!table.equals("[0]")){
                table[0][0] = "[x]";       
                topLeftCross.setVisible(true);
                count++;
                if(table[1][0].equals("[x]")&&table[2][0].equals("[x]")||table[0][1].equals("[x]")&&table[0][2].equals("[x]")||table[1][1].equals("[x]")&&table[2][2].equals("[x]")){
                    wonText.setVisible(true);
                    playAgain();
                }
                
                boolean unique = false;
                while(unique == false){
                    x = rand.nextInt(3);
                    y = rand.nextInt(3);
                    if(table[x][y].equals("[ ]")){
                        table[x][y] = "[0]";
                        unique = true;
                    }    
                }   
                if(x==0&&y==1){
                    middleLeftNaught.setVisible(true);
                }else if(x==0&&y==2){
                    bottomLeftNaught.setVisible(true);
                }else if(x==1&&y==0){
                    topMiddleNaught.setVisible(true);
                }else if(x==1&&y==1){
                    middleNaught.setVisible(true);
                }else if(x==1&&y==2){
                    bottomMiddleNaught.setVisible(true);
                }else if(x==2&&y==0){
                    topRightNaught.setVisible(true);
                }else if(x==2&&y==1){
                    middleRightNaught.setVisible(true);
                }else if(x==2&&y==2){
                    bottomRightNaught.setVisible(true);
                }
                if(table[0][0].equals("[0]")&&table[1][0].equals("[0]")&&table[2][0].equals("[0]")||table[0][1].equals("[0]")&&table[1][1].equals("[0]")&&table[2][1].equals("[0]")||table[0][2].equals("[0]")&&table[1][2].equals("[0]")&&table[2][2].equals("[0]")||table[0][0].equals("[0]")&&table[0][1].equals("[0]")&&table[0][2].equals("[0]")||table[1][0].equals("[0]")&&table[1][1].equals("[0]")&&table[1][2].equals("[0]")||table[2][0].equals("[0]")&&table[2][1].equals("[0]")&&table[2][2].equals("[0]")||table[0][0].equals("[0]")&&table[1][1].equals("[0]")&&table[2][2].equals("[0]")||table[2][0].equals("[0]")&&table[1][1].equals("[0]")&&table[0][2].equals("[0]")){
                    lostText.setVisible(true);
                    playAgain();
                }

            }   
            else{
                repeat();
            }
        }else{
            if(table[0][0].equals("[ ]")&&!table.equals("[0]")){
                table[0][0] = "[x]";       
                topLeftCross.setVisible(true);
                count++;
                if(table[1][0].equals("[x]")&&table[2][0].equals("[x]")||table[0][1].equals("[x]")&&table[0][2].equals("[x]")||table[1][1].equals("[x]")&&table[2][2].equals("[x]")){
                    wonText.setVisible(true);
                    playAgain();
                }else{
                    drewText.setVisible(true);
                    playAgain();
                }
            }    
        }    
    }//GEN-LAST:event_topLeftBoxMouseClicked

    private void topMiddleBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topMiddleBoxMouseClicked
        repeat.setVisible(false); 
        if(count<4){
            if(table[1][0].equals("[ ]")&&!table.equals("[0]")){
                table[1][0] = "[x]";       
                topMiddleCross.setVisible(true);
                count++;
                if(table[0][0].equals("[x]")&&table[2][0].equals("[x]")||table[1][1].equals("[x]")&&table[1][2].equals("[x]")){
                    wonText.setVisible(true);
                    playAgain();
                }
                
                boolean unique = false;
                while(unique == false){
                    x = rand.nextInt(3);
                    y = rand.nextInt(3);
                    if(table[x][y].equals("[ ]")){
                        table[x][y] = "[0]";
                        unique = true;
                    }    
                }    
                if(x==0&&y==1){
                    middleLeftNaught.setVisible(true);
                }else if(x==0&&y==2){
                    bottomLeftNaught.setVisible(true);
                }else if(x==0&&y==0){
                    topLeftNaught.setVisible(true);
                }else if(x==1&&y==1){
                    middleNaught.setVisible(true);
                }else if(x==1&&y==2){
                    bottomMiddleNaught.setVisible(true);
                }else if(x==2&&y==0){
                    topRightNaught.setVisible(true);
                }else if(x==2&&y==1){
                    middleRightNaught.setVisible(true);
                }else if(x==2&&y==2){
                    bottomRightNaught.setVisible(true);
                }
                if(table[0][0].equals("[0]")&&table[1][0].equals("[0]")&&table[2][0].equals("[0]")||table[0][1].equals("[0]")&&table[1][1].equals("[0]")&&table[2][1].equals("[0]")||table[0][2].equals("[0]")&&table[1][2].equals("[0]")&&table[2][2].equals("[0]")||table[0][0].equals("[0]")&&table[0][1].equals("[0]")&&table[0][2].equals("[0]")||table[1][0].equals("[0]")&&table[1][1].equals("[0]")&&table[1][2].equals("[0]")||table[2][0].equals("[0]")&&table[2][1].equals("[0]")&&table[2][2].equals("[0]")||table[0][0].equals("[0]")&&table[1][1].equals("[0]")&&table[2][2].equals("[0]")||table[2][0].equals("[0]")&&table[1][1].equals("[0]")&&table[0][2].equals("[0]")){
                    lostText.setVisible(true);
                    playAgain();
                }           
            }
            else{
                repeat();
            }
        }else{
            if(table[1][0].equals("[ ]")&&!table.equals("[0]")){
                table[1][0] = "[x]";       
                topMiddleCross.setVisible(true);
                count++;
                if(table[0][0].equals("[x]")&&table[2][0].equals("[x]")||table[1][1].equals("[x]")&&table[1][2].equals("[x]")){
                    wonText.setVisible(true);
                    playAgain();
                }else{
                    drewText.setVisible(true);
                    playAgain();
                }
            }
        }
    }//GEN-LAST:event_topMiddleBoxMouseClicked

    private void topRightBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topRightBoxMouseClicked
        repeat.setVisible(false); 
        if(count<4){
            if(table[2][0].equals("[ ]")&&!table.equals("[0]")){
                table[2][0] = "[x]";       
                topRightCross.setVisible(true);
                count++;
                if(table[0][0].equals("[x]")&&table[1][0].equals("[x]")||table[2][1].equals("[x]")&&table[2][2].equals("[x]")||table[1][1].equals("[x]")&&table[0][2].equals("[x]")){
                    wonText.setVisible(true);
                    playAgain();
                }
               
                boolean unique = false;
                while(unique == false){
                    x = rand.nextInt(3);
                    y = rand.nextInt(3);
                    if(table[x][y].equals("[ ]")){
                        table[x][y] = "[0]";
                        unique = true;
                    }    
                }    
                if(x==0&&y==1){
                    middleLeftNaught.setVisible(true);
                }else if(x==0&&y==2){
                    bottomLeftNaught.setVisible(true);
                }else if(x==0&&y==0){
                    topLeftNaught.setVisible(true);
                }else if(x==1&&y==1){
                    middleNaught.setVisible(true);
                }else if(x==1&&y==2){
                    bottomMiddleNaught.setVisible(true);
                }else if(x==1&&y==0){
                    topMiddleNaught.setVisible(true);
                }else if(x==2&&y==1){
                    middleRightNaught.setVisible(true);
                }else if(x==2&&y==2){
                    bottomRightNaught.setVisible(true);
                }
                if(table[0][0].equals("[0]")&&table[1][0].equals("[0]")&&table[2][0].equals("[0]")||table[0][1].equals("[0]")&&table[1][1].equals("[0]")&&table[2][1].equals("[0]")||table[0][2].equals("[0]")&&table[1][2].equals("[0]")&&table[2][2].equals("[0]")||table[0][0].equals("[0]")&&table[0][1].equals("[0]")&&table[0][2].equals("[0]")||table[1][0].equals("[0]")&&table[1][1].equals("[0]")&&table[1][2].equals("[0]")||table[2][0].equals("[0]")&&table[2][1].equals("[0]")&&table[2][2].equals("[0]")||table[0][0].equals("[0]")&&table[1][1].equals("[0]")&&table[2][2].equals("[0]")||table[2][0].equals("[0]")&&table[1][1].equals("[0]")&&table[0][2].equals("[0]")){
                    lostText.setVisible(true);
                    playAgain();
                }  
            }
            else{
                repeat();
            }
        }else{
            if(table[2][0].equals("[ ]")&&!table.equals("[0]")){
                table[2][0] = "[x]";       
                topRightCross.setVisible(true);
                count++;
                if(table[0][0].equals("[x]")&&table[1][0].equals("[x]")||table[2][1].equals("[x]")&&table[2][2].equals("[x]")||table[1][1].equals("[x]")&&table[0][2].equals("[x]")){
                    wonText.setVisible(true);
                    playAgain();
                }else{
                    drewText.setVisible(true);
                    playAgain();
                }
            }
        }
    }//GEN-LAST:event_topRightBoxMouseClicked

    private void middleLeftBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_middleLeftBoxMouseClicked
        repeat.setVisible(false); 
        if(count<4){
            if(table[0][1].equals("[ ]")&&!table.equals("[0]")){
                table[0][1] = "[x]";       
                middleLeftCross.setVisible(true);
                count++;
                if(table[0][0].equals("[x]")&&table[0][2].equals("[x]")||table[2][1].equals("[x]")&&table[1][1].equals("[x]")){
                    wonText.setVisible(true);
                    playAgain();
                }
                
                boolean unique = false;
                while(unique == false){
                    x = rand.nextInt(3);
                    y = rand.nextInt(3);
                    if(table[x][y].equals("[ ]")){
                        table[x][y] = "[0]";
                        unique = true;
                    }    
                }    
                if(x==2&&y==0){
                    topRightNaught.setVisible(true);
                }else if(x==0&&y==2){
                    bottomLeftNaught.setVisible(true);
                }else if(x==0&&y==0){
                    topLeftNaught.setVisible(true);
                }else if(x==1&&y==1){
                    middleNaught.setVisible(true);
                }else if(x==1&&y==2){
                    bottomMiddleNaught.setVisible(true);
                }else if(x==1&&y==0){
                    topMiddleNaught.setVisible(true);
                }else if(x==2&&y==1){
                    middleRightNaught.setVisible(true);
                }else if(x==2&&y==2){
                    bottomRightNaught.setVisible(true);
                }
                if(table[0][0].equals("[0]")&&table[1][0].equals("[0]")&&table[2][0].equals("[0]")||table[0][1].equals("[0]")&&table[1][1].equals("[0]")&&table[2][1].equals("[0]")||table[0][2].equals("[0]")&&table[1][2].equals("[0]")&&table[2][2].equals("[0]")||table[0][0].equals("[0]")&&table[0][1].equals("[0]")&&table[0][2].equals("[0]")||table[1][0].equals("[0]")&&table[1][1].equals("[0]")&&table[1][2].equals("[0]")||table[2][0].equals("[0]")&&table[2][1].equals("[0]")&&table[2][2].equals("[0]")||table[0][0].equals("[0]")&&table[1][1].equals("[0]")&&table[2][2].equals("[0]")||table[2][0].equals("[0]")&&table[1][1].equals("[0]")&&table[0][2].equals("[0]")){
                    lostText.setVisible(true);
                    playAgain();
                }


            }
            else{
                repeat();
            }
        }else{
            if(table[0][1].equals("[ ]")&&!table.equals("[0]")){
                table[0][1] = "[x]";       
                middleLeftCross.setVisible(true);
                count++;
                if(table[0][0].equals("[x]")&&table[0][2].equals("[x]")||table[2][1].equals("[x]")&&table[1][1].equals("[x]")){
                    wonText.setVisible(true);
                    playAgain();
                }else{
                    drewText.setVisible(true);
                    playAgain();
                }
            }    
        }    
    }//GEN-LAST:event_middleLeftBoxMouseClicked

    private void middleBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_middleBoxMouseClicked
        repeat.setVisible(false); 
        if(count<4){
            if(table[1][1].equals("[ ]")&&!table.equals("[0]")){
                table[1][1] = "[x]";       
                middleCross.setVisible(true);
                count++;
                if(table[0][0].equals("[x]")&&table[2][2].equals("[x]")||table[1][0].equals("[x]")&&table[1][2].equals("[x]")||table[0][1].equals("[x]")&&table[2][1].equals("[x]")){
                    wonText.setVisible(true);
                    playAgain();
                }
                
                boolean unique = false;
                while(unique == false){
                    x = rand.nextInt(3);
                    y = rand.nextInt(3);
                    if(table[x][y].equals("[ ]")){
                        table[x][y] = "[0]";
                        unique = true;
                    }    
                }    
                if(x==2&&y==0){
                    topRightNaught.setVisible(true);
                }else if(x==0&&y==2){
                    bottomLeftNaught.setVisible(true);
                }else if(x==0&&y==0){
                    topLeftNaught.setVisible(true);
                }else if(x==0&&y==1){
                    middleLeftNaught.setVisible(true);
                }else if(x==1&&y==2){
                    bottomMiddleNaught.setVisible(true);
                }else if(x==1&&y==0){
                    topMiddleNaught.setVisible(true);
                }else if(x==2&&y==1){
                    middleRightNaught.setVisible(true);
                }else if(x==2&&y==2){
                    bottomRightNaught.setVisible(true);
                }
                if(table[0][0].equals("[0]")&&table[1][0].equals("[0]")&&table[2][0].equals("[0]")||table[0][1].equals("[0]")&&table[1][1].equals("[0]")&&table[2][1].equals("[0]")||table[0][2].equals("[0]")&&table[1][2].equals("[0]")&&table[2][2].equals("[0]")||table[0][0].equals("[0]")&&table[0][1].equals("[0]")&&table[0][2].equals("[0]")||table[1][0].equals("[0]")&&table[1][1].equals("[0]")&&table[1][2].equals("[0]")||table[2][0].equals("[0]")&&table[2][1].equals("[0]")&&table[2][2].equals("[0]")||table[0][0].equals("[0]")&&table[1][1].equals("[0]")&&table[2][2].equals("[0]")||table[2][0].equals("[0]")&&table[1][1].equals("[0]")&&table[0][2].equals("[0]")){
                    lostText.setVisible(true);
                    playAgain();
                }


            }
            else{
                repeat();
            } 
        }else{
            if(table[1][1].equals("[ ]")&&!table.equals("[0]")){
                table[1][1] = "[x]";       
                middleCross.setVisible(true);
                count++;
                if(table[0][0].equals("[x]")&&table[2][2].equals("[x]")||table[1][0].equals("[x]")&&table[1][2].equals("[x]")||table[0][1].equals("[x]")&&table[2][1].equals("[x]")){
                    wonText.setVisible(true);
                    playAgain();
                }else{
                    drewText.setVisible(true);
                    playAgain();
                }
            }    
        }
    }//GEN-LAST:event_middleBoxMouseClicked

    private void middleRightBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_middleRightBoxMouseClicked
        repeat.setVisible(false); 
        if(count<4){
            if(table[2][1].equals("[ ]")&&!table.equals("[0]")){
                table[2][1] = "[x]";       
                middleRightCross.setVisible(true);
                count++;
                if(table[1][1].equals("[x]")&&table[0][1].equals("[x]")||table[2][0].equals("[x]")&&table[2][2].equals("[x]")){
                    wonText.setVisible(true);
                    playAgain();
                }
               
                boolean unique = false;
                while(unique == false){
                    x = rand.nextInt(3);
                    y = rand.nextInt(3);
                    if(table[x][y].equals("[ ]")){
                        table[x][y] = "[0]";
                        unique = true;
                    }    
                }    
                if(x==2&&y==0){
                    topRightNaught.setVisible(true);
                }else if(x==0&&y==2){
                    bottomLeftNaught.setVisible(true);
                }else if(x==0&&y==0){
                    topLeftNaught.setVisible(true);
                }else if(x==0&&y==1){
                    middleLeftNaught.setVisible(true);
                }else if(x==1&&y==2){
                    bottomMiddleNaught.setVisible(true);
                }else if(x==1&&y==0){
                    topMiddleNaught.setVisible(true);
                }else if(x==1&&y==1){
                    middleNaught.setVisible(true);
                }else if(x==2&&y==2){
                    bottomRightNaught.setVisible(true);
                }
                if(table[0][0].equals("[0]")&&table[1][0].equals("[0]")&&table[2][0].equals("[0]")||table[0][1].equals("[0]")&&table[1][1].equals("[0]")&&table[2][1].equals("[0]")||table[0][2].equals("[0]")&&table[1][2].equals("[0]")&&table[2][2].equals("[0]")||table[0][0].equals("[0]")&&table[0][1].equals("[0]")&&table[0][2].equals("[0]")||table[1][0].equals("[0]")&&table[1][1].equals("[0]")&&table[1][2].equals("[0]")||table[2][0].equals("[0]")&&table[2][1].equals("[0]")&&table[2][2].equals("[0]")||table[0][0].equals("[0]")&&table[1][1].equals("[0]")&&table[2][2].equals("[0]")||table[2][0].equals("[0]")&&table[1][1].equals("[0]")&&table[0][2].equals("[0]")){
                    lostText.setVisible(true);
                    playAgain();
                }


            }
            else{
                repeat();
            }
        }else{
            if(table[2][1].equals("[ ]")&&!table.equals("[0]")){
                table[2][1] = "[x]";       
                middleRightCross.setVisible(true);
                count++;
                if(table[1][1].equals("[x]")&&table[0][1].equals("[x]")||table[2][0].equals("[x]")&&table[2][2].equals("[x]")){
                    wonText.setVisible(true);
                    playAgain();
                }
                else{
                    drewText.setVisible(true);
                    playAgain();
                }
            }    
        }
            
            
    }//GEN-LAST:event_middleRightBoxMouseClicked

    private void bottomLeftBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bottomLeftBoxMouseClicked
        repeat.setVisible(false); 
        if (count<4){
            if(table[0][2].equals("[ ]")&&!table.equals("[0]")){
                table[0][2] = "[x]";       
                bottomLeftCross.setVisible(true);
                count++;
                if(table[1][1].equals("[x]")&&table[2][0].equals("[x]")||table[0][1].equals("[x]")&&table[0][0].equals("[x]")||table[1][2].equals("[x]")&&table[2][2].equals("[x]")){
                    wonText.setVisible(true);
                    playAgain();
                }
                
                boolean unique = false;
                while(unique == false){
                    x = rand.nextInt(3);
                    y = rand.nextInt(3);
                    if(table[x][y].equals("[ ]")){
                        table[x][y] = "[0]";
                        unique = true;
                    }    
                }    
                if(x==2&&y==0){
                    topRightNaught.setVisible(true);
                }else if(x==2&&y==1){
                    middleRightNaught.setVisible(true);
                }else if(x==0&&y==0){
                    topLeftNaught.setVisible(true);
                }else if(x==0&&y==1){
                    middleLeftNaught.setVisible(true);
                }else if(x==1&&y==2){
                    bottomMiddleNaught.setVisible(true);
                }else if(x==1&&y==0){
                    topMiddleNaught.setVisible(true);
                }else if(x==1&&y==1){
                    middleNaught.setVisible(true);
                }else if(x==2&&y==2){
                    bottomRightNaught.setVisible(true);
                }
                if(table[0][0].equals("[0]")&&table[1][0].equals("[0]")&&table[2][0].equals("[0]")||table[0][1].equals("[0]")&&table[1][1].equals("[0]")&&table[2][1].equals("[0]")||table[0][2].equals("[0]")&&table[1][2].equals("[0]")&&table[2][2].equals("[0]")||table[0][0].equals("[0]")&&table[0][1].equals("[0]")&&table[0][2].equals("[0]")||table[1][0].equals("[0]")&&table[1][1].equals("[0]")&&table[1][2].equals("[0]")||table[2][0].equals("[0]")&&table[2][1].equals("[0]")&&table[2][2].equals("[0]")||table[0][0].equals("[0]")&&table[1][1].equals("[0]")&&table[2][2].equals("[0]")||table[2][0].equals("[0]")&&table[1][1].equals("[0]")&&table[0][2].equals("[0]")){
                    lostText.setVisible(true);
                    playAgain();
                }


            }
            else{
                repeat();
            } 
        }    
        else{
            if(table[0][2].equals("[ ]")&&!table.equals("[0]")){
                table[0][2] = "[x]";       
                bottomLeftCross.setVisible(true);
                count++;
                if(table[1][1].equals("[x]")&&table[2][0].equals("[x]")||table[0][1].equals("[x]")&&table[0][0].equals("[x]")||table[1][2].equals("[x]")&&table[2][2].equals("[x]")){
                    wonText.setVisible(true);
                    playAgain();
                }else{
                    drewText.setVisible(true);
                    playAgain();
                }
                 
            }
            
        }
            
    }//GEN-LAST:event_bottomLeftBoxMouseClicked

    private void bottomMiddleBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bottomMiddleBoxMouseClicked
        repeat.setVisible(false); 
        if(count<4){
            if(table[1][2].equals("[ ]")&&!table.equals("[0]")){
                table[1][2] = "[x]";       
                bottomMiddleCross.setVisible(true);
                count++;
                if(table[1][1].equals("[x]")&&table[1][0].equals("[x]")||table[0][2].equals("[x]")&&table[2][2].equals("[x]")){
                    wonText.setVisible(true);
                    playAgain();
                }
                boolean unique = false;
                while(unique == false){
                    x = rand.nextInt(3);
                    y = rand.nextInt(3);
                    if(table[x][y].equals("[ ]")){
                        table[x][y] = "[0]";
                        unique = true;
                    }    
                }    
                if(x==2&&y==0){
                    topRightNaught.setVisible(true);
                }else if(x==2&&y==1){
                    middleRightNaught.setVisible(true);
                }else if(x==0&&y==0){
                    topLeftNaught.setVisible(true);
                }else if(x==0&&y==1){
                    middleLeftNaught.setVisible(true);
                }else if(x==0&&y==2){
                    bottomLeftNaught.setVisible(true);
                }else if(x==1&&y==0){
                    topMiddleNaught.setVisible(true);
                }else if(x==1&&y==1){
                    middleNaught.setVisible(true);
                }else if(x==2&&y==2){
                    bottomRightNaught.setVisible(true);
                }
                if(table[0][0].equals("[0]")&&table[1][0].equals("[0]")&&table[2][0].equals("[0]")||table[0][1].equals("[0]")&&table[1][1].equals("[0]")&&table[2][1].equals("[0]")||table[0][2].equals("[0]")&&table[1][2].equals("[0]")&&table[2][2].equals("[0]")||table[0][0].equals("[0]")&&table[0][1].equals("[0]")&&table[0][2].equals("[0]")||table[1][0].equals("[0]")&&table[1][1].equals("[0]")&&table[1][2].equals("[0]")||table[2][0].equals("[0]")&&table[2][1].equals("[0]")&&table[2][2].equals("[0]")||table[0][0].equals("[0]")&&table[1][1].equals("[0]")&&table[2][2].equals("[0]")||table[2][0].equals("[0]")&&table[1][1].equals("[0]")&&table[0][2].equals("[0]")){
                    lostText.setVisible(true);
                    playAgain();
                }


            }
            else{
                repeat();
            }
        }
        else{
            if(table[1][2].equals("[ ]")&&!table.equals("[0]")){
                table[1][2] = "[x]";       
                bottomMiddleCross.setVisible(true);
                count++;
                if(table[1][1].equals("[x]")&&table[1][0].equals("[x]")||table[0][2].equals("[x]")&&table[2][2].equals("[x]")){
                    wonText.setVisible(true);
                    playAgain();
                }
                else{
                    drewText.setVisible(true);
                    playAgain();
                }
            }
        }    
    }//GEN-LAST:event_bottomMiddleBoxMouseClicked

    private void BottomRightBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BottomRightBoxMouseClicked
        repeat.setVisible(false); 
        if(count<4){
            if(table[2][2].equals("[ ]")&&!table.equals("[0]")){
                table[2][2] = "[x]";       
                bottomRightCross.setVisible(true);
                count++;
                if(table[1][2].equals("[x]")&&table[0][2].equals("[x]")||table[2][1].equals("[x]")&&table[2][0].equals("[x]")||table[1][1].equals("[x]")&&table[0][0].equals("[x]")){
                    wonText.setVisible(true);
                    playAgain();
                }
                
                boolean unique = false;
                while(unique == false){
                    x = rand.nextInt(3);
                    y = rand.nextInt(3);
                    if(table[x][y].equals("[ ]")){
                        table[x][y] = "[0]";
                        unique = true;
                    }    
                }    
                if(x==2&&y==0){
                    topRightNaught.setVisible(true);
                }else if(x==2&&y==1){
                    middleRightNaught.setVisible(true);
                }else if(x==0&&y==0){
                    topLeftNaught.setVisible(true);
                }else if(x==0&&y==1){
                    middleLeftNaught.setVisible(true);
                }else if(x==0&&y==2){
                    bottomLeftNaught.setVisible(true);
                }else if(x==1&&y==0){
                    topMiddleNaught.setVisible(true);
                }else if(x==1&&y==1){
                    middleNaught.setVisible(true);
                }else if(x==1&&y==2){
                    bottomMiddleNaught.setVisible(true);
                }
                if(table[0][0].equals("[0]")&&table[1][0].equals("[0]")&&table[2][0].equals("[0]")||table[0][1].equals("[0]")&&table[1][1].equals("[0]")&&table[2][1].equals("[0]")||table[0][2].equals("[0]")&&table[1][2].equals("[0]")&&table[2][2].equals("[0]")||table[0][0].equals("[0]")&&table[0][1].equals("[0]")&&table[0][2].equals("[0]")||table[1][0].equals("[0]")&&table[1][1].equals("[0]")&&table[1][2].equals("[0]")||table[2][0].equals("[0]")&&table[2][1].equals("[0]")&&table[2][2].equals("[0]")||table[0][0].equals("[0]")&&table[1][1].equals("[0]")&&table[2][2].equals("[0]")||table[2][0].equals("[0]")&&table[1][1].equals("[0]")&&table[0][2].equals("[0]")){
                    lostText.setVisible(true);
                    playAgain();
                }


            }
            else{
                repeat();
            } 
        }else{
            if(table[2][2].equals("[ ]")&&!table.equals("[0]")){
                table[2][2] = "[x]";       
                bottomRightCross.setVisible(true);
                count++;
                if(table[1][2].equals("[x]")&&table[0][2].equals("[x]")||table[2][1].equals("[x]")&&table[2][0].equals("[x]")||table[1][1].equals("[x]")&&table[0][0].equals("[x]")){
                    wonText.setVisible(true);
                    playAgain();
                }else{
                    drewText.setVisible(true);
                    playAgain();
                }        
            }
        }    
            
            
    }//GEN-LAST:event_BottomRightBoxMouseClicked

    private void yesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesButtonActionPerformed
        this.dispose();
        Game game = new Game();
        count = 0;
        Toolkit tk = Toolkit.getDefaultToolkit(); 
        int xSize = (int)tk.getScreenSize().getWidth();
        int ySize = (int)tk.getScreenSize().getHeight();
        game.setSize(xSize,ySize);
        game.setVisible(true);
    }//GEN-LAST:event_yesButtonActionPerformed

    private void noButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_noButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void table(){
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                table[j][i] = "[ ]";
            }   
        }
        
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Game().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BottomRightBox;
    private javax.swing.JLabel bottomLeftBox;
    private javax.swing.JLabel bottomLeftCross;
    private javax.swing.JLabel bottomLeftNaught;
    private javax.swing.JLabel bottomMiddleBox;
    private javax.swing.JLabel bottomMiddleCross;
    private javax.swing.JLabel bottomMiddleNaught;
    private javax.swing.JLabel bottomRightCross;
    private javax.swing.JLabel bottomRightNaught;
    private javax.swing.JLabel drewText;
    private javax.swing.JLabel lostText;
    private javax.swing.JLabel middleBox;
    private javax.swing.JLabel middleCross;
    private javax.swing.JLabel middleLeftBox;
    private javax.swing.JLabel middleLeftCross;
    private javax.swing.JLabel middleLeftNaught;
    private javax.swing.JLabel middleNaught;
    private javax.swing.JLabel middleRightBox;
    private javax.swing.JLabel middleRightCross;
    private javax.swing.JLabel middleRightNaught;
    private javax.swing.JButton noButton;
    private javax.swing.JLabel playAgainText;
    private javax.swing.JLabel repeat;
    private javax.swing.JLabel topLeftBox;
    private javax.swing.JLabel topLeftCross;
    private javax.swing.JLabel topLeftNaught;
    private javax.swing.JLabel topMiddleBox;
    private javax.swing.JLabel topMiddleCross;
    private javax.swing.JLabel topMiddleNaught;
    private javax.swing.JLabel topRightBox;
    private javax.swing.JLabel topRightCross;
    private javax.swing.JLabel topRightNaught;
    private javax.swing.JLabel wonText;
    private javax.swing.JButton yesButton;
    // End of variables declaration//GEN-END:variables
}
